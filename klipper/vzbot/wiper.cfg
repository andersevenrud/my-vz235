;
; This is a Klipper configuration for a community
; built VzBot 235 nozzle wiper. Based on original
; source provided by Marcin Miszewski:
; https://www.printables.com/model/1196046
;
; ---
;
; https://github.com/andersevenrud/my-vz235
;

# ################################################# #
#                  CONFIGURATION                    #
# ################################################# #

[tmc2209 manual_stepper wiper]
uart_pin: DRIVER6_CS
run_current: 0.5
interpolate: False
stealthchop_threshold: 0

[manual_stepper wiper]
endstop_pin: STOP7
step_pin: DRIVER6_STEP
dir_pin: !DRIVER6_DIR
enable_pin: !DRIVER6_EN
microsteps: 16
rotation_distance: 1130
velocity: 5000
accel: 50000

[gcode_macro _WIPER_VARIABLE]
variable_min_x: 0.0
variable_max_x: 50.0
variable_min_y: 215.0
variable_max_y: 225.0
variable_park_x: 110.0
variable_park_y: 110.0
variable_park_z: 15.5
variable_arm_move: 845
variable_z_accel: 1500
variable_park_accel: 18000
variable_first_accel: 12000
variable_second_accel: 20000
gcode:
    ; This macro only defines variables

# ################################################# #
#                  PRIVATE MACROS                   #
# ################################################# #

[gcode_macro _WIPER_ENABLE]
description: Enable the wiper stepper
gcode:
    MANUAL_STEPPER STEPPER=wiper ENABLE=1

[gcode_macro _WIPER_DISABLE]
description: Disable the wiper stepper
gcode:
    MANUAL_STEPPER STEPPER=wiper ENABLE=0

[gcode_macro _WIPER_CLOSE]
description: Close the wiper stepper
gcode:
    MANUAL_STEPPER STEPPER=wiper MOVE=0 SPEED=2000

[gcode_macro _WIPER_OPEN]
description: Open the wiper stepper
gcode:
    {% set cfg = printer['gcode_macro _WIPER_VARIABLE'] %}
    {% set move = cfg.arm_move | int %}
    {% set z = cfg.park_z | float %}
    {% set z_accel = cfg.z_accel | int}

    _CLIENT_LINEAR_MOVE Z={z} F={z_accel} ABSOLUTE=1
    MANUAL_STEPPER STEPPER=wiper MOVE={move} SPEED=2000

[gcode_macro _WIPER_HOME]
description: Home the wiper stepper
gcode:
    MANUAL_STEPPER STEPPER=wiper MOVE=-1000 STOP_ON_ENDSTOP=1 SPEED=2000
    MANUAL_STEPPER STEPPER=wiper SET_POSITION=0

[gcode_macro _WIPER_RUN]
description: Perform wiper forward/back passes
gcode:
    {% set cfg = printer['gcode_macro _WIPER_VARIABLE'] %}
    {% set first_accel = cfg.first_accel | int %}
    {% set second_accel = cfg.second_accel | int %}
    {% set start_x = cfg.min_x | float %}
    {% set end_x = cfg.max_x | float %}
    {% set start_y = cfg.max_y | float %}
    {% set end_y = cfg.min_y | float %}

    {% set step = 0.5 %}
    {% set steps = ((start_y - end_y) / step) | int %}
    {% set passes = [
        {'y_start': start_y, 'y_step': -step, 'accel': first_accel, 'x_even': end_x, 'x_odd': start_x},
        {'y_start': end_y,   'y_step':  step, 'accel': second_accel, 'x_even': start_x, 'x_odd': end_x}
    ] %}

    {% for pass in passes %}
        {% for idx in range(steps + 1) %}
            {% set y = pass.y_start + (idx * pass.y_step) %}
            {% set x = pass.x_even if idx % 2 == 0 else pass.x_odd %}
            _CLIENT_LINEAR_MOVE X={x} Y={y} F={pass.accel} ABSOLUTE=1
        {% endfor %}
    {% endfor %}

[gcode_macro _WIPER_PARK_CENTER]
description: Helper macro for centering toolhead
gcode:
    {% set cfg = printer['gcode_macro _WIPER_VARIABLE'] %}
    {% set accel = cfg.park_accel | int %}
    {% set cx = cfg.park_x | float %}
    {% set cy = cfg.park_y | float %}

    {% if printer.toolhead.position.x != cx or printer.toolhead.position.y != cy %}
        _CLIENT_LINEAR_MOVE X={cx} Y={cy} F={accel} ABSOLUTE=1
    {% endif %}

[gcode_macro _WIPER_PRE]
description: Perform pre wipe instructions
gcode:
    {% set cfg = printer['gcode_macro _WIPER_VARIABLE'] %}
    {% set x = cfg.min_x | float %}
    {% set y = cfg.max_y | float %}
    {% set accel = cfg.park_accel | int %}

    _CLIENT_LINEAR_MOVE Y={y} F={accel} ABSOLUTE=1
    _CLIENT_LINEAR_MOVE X={x} Y={y} F={accel} ABSOLUTE=1
    M106 S204
    SET_FAN_SPEED FAN=RSCS SPEED=1

[gcode_macro _WIPER_POST]
description: Perform post wipe instructions
gcode:
    M106 S255
    _WIPER_PARK_CENTER
    M106 S0
    SET_FAN_SPEED FAN=RSCS SPEED=0

[gcode_macro _WIPER_RESTORE]
description: Perform post wipe restore instructions
gcode:
    {% set cfg = printer['gcode_macro _WIPER_VARIABLE'] %}
    {% set accel = cfg.park_accel | int %}
    {% set z_accel = cfg.z_accel | int %}
    {% set original_z = params.z | float %}
    {% set original_x = params.x | float %}
    {% set original_y = params.y | float %}

    _CLIENT_LINEAR_MOVE Z={original_z} F={z_accel} ABSOLUTE=1
    _CLIENT_LINEAR_MOVE X={original_x} Y={original_y} F={accel} ABSOLUTE=1

# ################################################# #
#                   PUBLIC MACROS                   #
# ################################################# #

[gcode_macro WIPE_NOZZLE]
description: Perform a nozzle wipe
gcode:
    {% set original_z = printer.toolhead.position.z %}
    {% set original_x = printer.toolhead.position.x %}
    {% set original_y = printer.toolhead.position.y %}

    {% if 'gcode_macro _WIPER_VARIABLE' not in printer %}
        {action_raise_error("Missing _WIPER_VARIABLE configuration")}
    {% elif printer.toolhead.homed_axes != "xyz" %}
        {action_raise_error("Printer must be homed to wipe...")}
    {% elif printer.extruder.temperature < 150 %}
        {action_raise_error("Extruder must be hot to...")}
    {% else %}
        M118 Starting nozzle wipe...

        M118 --> Homing
        _WIPER_PARK_CENTER
        _WIPER_ENABLE
        _WIPER_HOME

        M118 --> Wiping
        _WIPER_OPEN
        _WIPER_PRE
        _WIPER_RUN

        M118 --> Finalizing
        _WIPER_POST
        _WIPER_HOME
        _WIPER_DISABLE

        M118 --> Moving back to original position
        _WIPER_RESTORE x={original_x} y={original_y} z={original_z}
    {% endif %}
